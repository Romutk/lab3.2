#!/bin/bash

# Copyright (C) 2011 Karel Zak <kzak@redhat.com>
# This file is part of util-linux.

<<<<<<< HEAD
TS_TOPDIR="$(dirname $0)/../.."
=======
TS_TOPDIR="${0%/*}/../.."
>>>>>>> master-vanilla
TS_DESC="regular file"

. $TS_TOPDIR/functions.sh
ts_init "$*"
<<<<<<< HEAD
ts_skip_nonroot

set -o pipefail
=======

ts_check_test_command "$TS_CMD_MOUNT"
ts_check_test_command "$TS_CMD_UMOUNT"

ts_skip_nonroot
ts_check_losetup
ts_check_prog "mkfs.ext3"
>>>>>>> master-vanilla

IMAGE=$(ts_image_init)
mkfs.ext3 -F $IMAGE &> /dev/null || ts_die "Cannot make ext3 on $IMAGE"

[ -d "$TS_MOUNTPOINT" ] || mkdir -p $TS_MOUNTPOINT

$TS_CMD_MOUNT $IMAGE $TS_MOUNTPOINT 2>&1 >> $TS_OUTPUT

DEVICE=$(awk '/regfile/ { print $1 }' /proc/mounts)

<<<<<<< HEAD
grep -q "$TS_MOUNTPOINT" /proc/mounts || ts_die "Cannot find $TS_MOUNTPOINT in /proc/mounts"

if [ -f "/sys/block/$(basename $DEVICE)/loop" ]; then
=======
ts_is_mounted "$TS_MOUNTPOINT" || ts_die "Cannot find $TS_MOUNTPOINT in /proc/mounts"

if [ -f "/sys/block/$(basename $DEVICE)/loop/backing_file" ]; then
>>>>>>> master-vanilla
	$TS_CMD_UMOUNT $IMAGE || ts_die "Cannot umount $IMAGE"
else
	$TS_CMD_UMOUNT $TS_MOUNTPOINT &> /dev/null
	ts_skip "too old kernel"
fi

<<<<<<< HEAD
grep -q "$TS_MOUNTPOINT" /proc/mounts && ts_die "$TS_MOUNTPOINT still in /proc/mounts"
=======
ts_is_mounted "$TS_MOUNTPOINT" && ts_die "$TS_MOUNTPOINT still in /proc/mounts"
>>>>>>> master-vanilla

ts_log "Success"
ts_finalize

