#!/bin/bash

# Copyright (C) 2010 Karel Zak <kzak@redhat.com>

<<<<<<< HEAD
TS_TOPDIR="$(dirname $0)/../.."
=======
TS_TOPDIR="${0%/*}/../.."
>>>>>>> master-vanilla
TS_DESC="context (utab)"

. $TS_TOPDIR/functions.sh
ts_init "$*"
<<<<<<< HEAD
ts_skip_nonroot

TESTPROG="$TS_HELPER_LIBMOUNT_CONTEXT"
LABEL=libmount-test
UUID=$(uuidgen)
=======

ts_check_test_command "$TS_CMD_FDISK"
ts_check_test_command "$TS_CMD_FINDMNT"
ts_check_test_command "$TS_CMD_WIPEFS"
ts_check_test_command "$TS_CMD_UUIDGEN"

ts_skip_nonroot
ts_check_prog "mkfs.ext4"

TESTPROG="$TS_HELPER_LIBMOUNT_CONTEXT"
LABEL=libmount-test
UUID=$($TS_CMD_UUIDGEN)
>>>>>>> master-vanilla
MOUNTPOINT="$TS_MOUNTPOINT"

[ -x $TESTPROG ] || ts_skip "test not compiled"

<<<<<<< HEAD
modprobe --dry-run --quiet scsi_debug
[ "$?" == 0 ] || ts_skip "missing scsi_debug module"

ts_log "Init device"
rmmod scsi_debug &> /dev/null
modprobe scsi_debug dev_size_mb=260
[ "$?" == 0 ] || ts_die "Cannot init device"

sleep 3

DEVNAME=$(grep scsi_debug /sys/block/*/device/model | awk -F '/' '{print $4}')
[ "x${DEVNAME}" == "x" ] && ts_die "Cannot find device"

DEVICE="/dev/${DEVNAME}"

ts_log "Create partitions"
$TS_CMD_FDISK ${DEVICE} >> /dev/null 2>&1 <<EOF
=======
# set global variable TS_DEVICE
ts_scsi_debug_init dev_size_mb=100
DEVNAME=$(basename $TS_DEVICE)

ts_log "Create partitions"
$TS_CMD_FDISK ${TS_DEVICE} &> /dev/null <<EOF
>>>>>>> master-vanilla
n
p
1


w
q
EOF

<<<<<<< HEAD
DEVICE="/dev/${DEVNAME}1"

sleep 3
=======
DEVICE="${TS_DEVICE}1"

sleep 1
udevadm settle

grep -q $DEVNAME /proc/partitions
if [ $? -ne 0 ]; then
	rmmod scsi_debug
	ts_skip "no partition!"
fi
>>>>>>> master-vanilla

ts_log "Create filesystem"
mkfs.ext4 -L "$LABEL" -U "$UUID" $DEVICE &> /dev/null

ts_log "Do tests..."

export LIBMOUNT_MTAB=$TS_OUTPUT.mtab
rm -f $LIBMOUNT_MTAB
ln -s /proc/mounts $LIBMOUNT_MTAB

export LIBMOUNT_UTAB=$TS_OUTPUT.utab
rm -f $LIBMOUNT_UTAB
> $LIBMOUNT_UTAB

<<<<<<< HEAD

ts_init_subtest "mount-by-devname"
mkdir -p $MOUNTPOINT &>  /dev/null
$TESTPROG --mount $DEVICE $MOUNTPOINT >> $TS_OUTPUT 2>&1
=======
udevadm settle

ts_init_subtest "mount-by-devname"
mkdir -p $MOUNTPOINT &>  /dev/null
ts_valgrind $TESTPROG --mount $DEVICE $MOUNTPOINT >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
grep -q $DEVICE /proc/mounts || \
	echo "(by device) cannot find $DEVICE in /proc/mounts" >> $TS_OUTPUT 2>&1
ts_finalize_subtest

<<<<<<< HEAD
ts_init_subtest "umount-by-devname"
$TESTPROG --umount $DEVICE >> $TS_OUTPUT 2>&1
=======

ts_init_subtest "umount-by-devname"
ts_valgrind $TESTPROG --umount $DEVICE >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
grep -q $DEVICE /proc/mounts &&
	echo "umount (device) failed: found $DEVICE in /proc/mounts" >> $TS_OUTPUT 2>&1
ts_finalize_subtest


ts_init_subtest "mount-uhelper"
mkdir -p $MOUNTPOINT &>  /dev/null
<<<<<<< HEAD
$TESTPROG --mount -o uhelper=foo,rw LABEL="$LABEL" $MOUNTPOINT >> $TS_OUTPUT 2>&1
=======
ts_valgrind $TESTPROG --mount -o uhelper=foo,rw LABEL="$LABEL" $MOUNTPOINT >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
grep -q $DEVICE $LIBMOUNT_UTAB || \
	echo "(by label) cannot find $DEVICE in $LIBMOUNT_UTAB" >> $TS_OUTPUT 2>&1
ts_finalize_subtest

<<<<<<< HEAD
ts_init_subtest "umount"
$TESTPROG --umount $MOUNTPOINT >> $TS_OUTPUT 2>&1
=======

ts_init_subtest "umount"
ts_valgrind $TESTPROG --umount $MOUNTPOINT >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
grep -q $DEVICE $LIBMOUNT_UTAB && \
	echo "umount (mountpoint) failed: found $DEVICE in $LIBMOUNT_UTAB" >> $TS_OUTPUT 2>&1
ts_finalize_subtest

<<<<<<< HEAD
if [ -x "/sbin/mkfs.btrfs" ]; then
	ts_log "Create filesystem [btrfs]"
	/sbin/mkfs.btrfs -L "$LABEL" $DEVICE &> /dev/null
	mount -t btrfs $DEVICE $MOUNTPOINT &> /dev/null
	/sbin/btrfsctl -S sub $MOUNTPOINT &> /dev/null
	umount $MOUNTPOINT &> /dev/null

	ts_init_subtest "mount-uhelper-subvol"
	mkdir -p $MOUNTPOINT &>  /dev/null
	$TESTPROG --mount -o uhelper=foo,rw,subvol=sub $DEVICE  $MOUNTPOINT >> $TS_OUTPUT 2>&1
=======

if [ -x "/sbin/mkfs.btrfs" ]; then
	$TS_CMD_WIPEFS -a  $DEVICE &> /dev/null
	ts_log "Create filesystem [btrfs]"
	mkfs.btrfs -L "$LABEL" $DEVICE &> /dev/null
	udevadm settle

	mount -t btrfs $DEVICE $MOUNTPOINT &> /dev/null
	btrfs subvolume create $MOUNTPOINT/sub &> /dev/null
	umount $MOUNTPOINT &> /dev/null

	udevadm settle

	ts_init_subtest "mount-uhelper-subvol"
	mkdir -p $MOUNTPOINT &>  /dev/null
	ts_valgrind $TESTPROG --mount -o uhelper=foo,rw,subvol=sub $DEVICE  $MOUNTPOINT >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
	grep -q $DEVICE $LIBMOUNT_UTAB || \
		echo "cannot find $DEVICE in $LIBMOUNT_UTAB" >> $TS_OUTPUT 2>&1
	ts_finalize_subtest

	ts_log "All mount options (btrfs subvolume + utab) ---"
	$TS_CMD_FINDMNT --mtab $MOUNTPOINT -o OPTIONS -n >> $TS_OUTPUT 2>&1
	ts_log "---"

	ts_init_subtest "umount-subvol"
<<<<<<< HEAD
	$TESTPROG --umount $MOUNTPOINT >> $TS_OUTPUT 2>&1
=======
	ts_valgrind $TESTPROG --umount $MOUNTPOINT >> $TS_OUTPUT 2>&1
>>>>>>> master-vanilla
	grep -q $DEVICE $LIBMOUNT_UTAB && \
		echo "umount (mountpoint) failed: found $DEVICE in $LIBMOUNT_UTAB" >> $TS_OUTPUT 2>&1
	ts_finalize_subtest
fi

ts_log "...done."
rmmod scsi_debug
ts_finalize
